#!/usr/bin/env zunit

@setup {
  run rbw login $AFTERBUILD_LOGIN $AFTERBUILD_PASSWORD --host $AFTERBUILD_HOST
}

@test 'Command company (#check name)' {
  run rbw company --json
  assert $state equals 0
  NAME=`echo $output | jq '.name' -r`
  assert $NAME is_not_empty
  assert $NAME same_as 'RainbowCLI-tests'
}

@test 'Command company set-public (#check visibility)' {
  run rbw company set-public --json
  assert $state equals 0
  VISIBILITY=`echo $output | jq '.visibility' -r`
  assert $VISIBILITY is_not_empty
  assert $VISIBILITY same_as 'public'
}

@test 'Command company set-private (#check visibility)' {
  run rbw company set-private --json
  assert $state equals 0
  VISIBILITY=`echo $output | jq '.visibility' -r`
  assert $VISIBILITY is_not_empty
  assert $VISIBILITY same_as 'private'
}

@test 'Command company set-orgpublic (#check visibility)' {
  run rbw company set-orgpublic --json
  assert $state equals 0
  VISIBILITY=`echo $output | jq '.visibility' -r`
  assert $VISIBILITY is_not_empty
  assert $VISIBILITY same_as 'organization'
}

@test 'Command company set-name (#check name)' {
  run rbw company set-name 'RainbowCLI-tests-2' --json
  assert $state equals 0
  NAME=`echo $output | jq '.name' -r`
  assert $NAME is_not_empty
  assert $NAME same_as 'RainbowCLI-tests-2'
  run rbw company set-name 'RainbowCLI-tests' --json
  assert $state equals 0
}

@test 'Command companies (#check total)' {
  run rbw companies --json
  assert $state equals 0
  TOTAL=`echo $output | jq '.total' -r`
  assert $TOTAL is_not_empty
  assert $TOTAL same_as '1'
}

@test 'Command company status (#check Status)' {
  run rbw company status --json
  assert $state equals 0
  STATUS=`echo $output | jq '.Status' -r`
  assert $STATUS is_not_empty
  assert $STATUS same_as 'active'
}

@test 'Command company metrics (#check _id)' {
  run rbw company metrics --json
  assert $state equals 0
  NAME=`echo $output | jq '.data[0].stats[0].companyName' -r`
  assert $NAME is_not_empty
  assert $NAME same_as 'RainbowCLI-tests'
}

@test 'Command company metrics daily (#check companyId)' {
  run rbw company metrics daily --json
  assert $state equals 0
  NAME=`echo $output | jq '.companyName' -r`
  assert $NAME is_not_empty
  assert $NAME same_as 'RainbowCLI-tests'
}

@test 'Command company create (#check name)' {
  run rbw company create 'aCLICompanyForTest' --json
  assert $state equals 0
  NAME=`echo $output | jq '.name' -r`
  assert $NAME is_not_empty
  assert $NAME same_as 'aCLICompanyForTest'
}

@test 'Command companies set-inactive (#check status)' {
  run rbw companies -n 'aCLICompanyForTest' --json
  assert $state equals 0
  ID=`echo $output | jq '.data[0].id' -r`
  run rbw company set-inactive -c $ID --json
  STATUS=`echo $output | jq '.status' -r`
  assert $STATUS is_not_empty
  assert $STATUS same_as 'hold'
}

@test 'Command companies set-active (#check status)' {
  run rbw companies -n 'aCLICompanyForTest' --json
  assert $state equals 0
  ID=`echo $output | jq '.data[0].id' -r`
  run rbw company set-active -c $ID --json
  STATUS=`echo $output | jq '.status' -r`
  assert $STATUS is_not_empty
  assert $STATUS same_as 'active'
}

@test 'Command company delete (#check count)' {
  run rbw companies --json
  assert $state equals 0
  ID=`echo $output | jq '.data[0].id' -r`
  run rbw company delete $ID --nc
  assert $state equals 0
  run rbw companies --json
  TOTAL=`echo $output | jq '.total' -r`
  assert $TOTAL is_not_empty
  assert $TOTAL same_as '1'
}

@teardown {
  rbw logout
}